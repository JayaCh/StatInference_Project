extract_numeric("class5")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
students4
submit()
submit()
submit()
passed
failed
mutate(passed, status = "passed")
passed<-passed %>% mutate(status = "passed")
failed<-failed %>% mutate(status = "failed")
?rbind_list
rbind_list(passed, failed)
sat
submit()
submit()
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridate)
this_day<-today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment<-now()
this_moment
hour(this_moment)
my_date<-ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("--192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment<-update(this_moment, hours = hour(now), minutes = minute(now))
this_moment<-update(this_moment, hours = hour(now()), minutes = minute(now()))
this_moment
?now
nyc<-now(tzone = "America/New_York")
nyc
nyc + days(2)
depart<-nyc+days(2)
depart
depart<-update(depart, hours = 17, minutes = 34)
depart
depart+hours(15)+minutes(50)
arrive<-depart+hours(15)+minutes(50)
?with_tz
arrive <-with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time<-mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long<-new_interval(arrive, last_time)
how_long<-new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
pbinom(8, 10, .9, lower.tail = FALSE)
pbinom(8, 10, .1, lower.tail = FALSE)
pbinom(8, 10, .5, lower.tail = FALSE)
qnorm(.75, 1020, 50)
ppois(40, lambda = 9*5)
pbinom(45, 100, .5, lower.tail= TRUE)
pnorm(70, 80, 10, lower.tail=TRUE)
qnorm(.95, 1100, 75)
sqrt(75/100)
sqrt(.75)
1180 - 1.645 *sqrt(.75)
1100 + 1.645
1100 + 1.645*7.5
pbinom(4, 5, .5, lower.tail= FALSE)
pbinom(4, 5, .5, lower.tail= TRUE)
pbinom(3, 5, .5, lower.tail= FALSE)
pnorm(-1)
pnorm(1)
pnorm(1) - pnorm(-1)
ppois(10, lambda = 5*3)
ts<-qt(1-0.05/2, 8)
round(1100 + c(-1, 1) * ts * 30 / sqrt(9)) #
2*sqrt(9)/ts
rexp(5, 1)
rexp(40, 0.2)
t <- rexp(40, 0.2)
mean(t)
t<- rexp(1000, 0.2)
mean(1000)
mean(t)
tMean <- 1/lambda
tStd <- 1/lambda * 1/sqrt(n)
tVariance <- tStd^2
library(ggplot2)
n <- 40
sim <- 1000
lambda <- 0.2
tMean <- 1/lambda
tStd <- 1/lambda * 1/sqrt(n)
tVariance <- tStd^2
xbar <- NULL
for (i in 1:1000) {
xbar[i] <- mean(exp(n,rate=lambda))
}
tMean <- 1/lambda
tStd <- 1/lambda * 1/sqrt(n)
tVariance <- tStd^2
xbar <- NULL
for (i in 1:1000) {
xbar[i] <- mean(rexp(n,rate = lambda))
}
tMean
tStd
tVariance
sMean
sStd
sVariance
sMean <- mean(xbar)
sStd <- sd(xbar)
sVariance <- var(xbar)
sMean
sStd
sVariance
sMean
tMean
hist(xbar,breaks=10,col="red",main="Histogram of means from 1000 simulations",ylab="density")
abline(v=mean(means),col="black",lwd=2)
hist(xbar,breaks=10,col="red",main="Histogram of means from 1000 simulations",ylab="density")
abline(v=mean(means),col="black",lwd=4)
hist(xbar,breaks=10,col="red",main="Histogram of means from 1000 simulations",ylab="density")
abline(v=mean(xbar),col="black",lwd=4)
hist(xbar,breaks=10,col="red",
main="Histogram of means from 1000 simulations",ylab="density", xlab="means")
abline(v = sMean,col = "black",lwd = 2)
abline(v = tMean, col = "green", lwd = 4)
hist(xbar,breaks=10,col="red",
main="Histogram of means from 1000 simulations",ylab="density", xlab="means")
abline(v = sMean,col = "blue",lwd = 2)
abline(v = tMean, col = "black", lwd = 2)
hist(xbar,breaks=10,col="orange",
main="Histogram of means from 1000 simulations",ylab="density", xlab="means")
abline(v = sMean,col = "green",lwd = 2)
abline(v = tMean, col = "purple", lwd = 2)
hist(xbar,breaks=10,col="orange",
main="Histogram of means from 1000 simulations",ylab="density", xlab="means")
abline(v = sMean,col = "green",lwd = 2)
abline(v = tMean, col = "black", lwd = 2)
hist(xbar,breaks=10,col="orange",
main="Histogram of means from 1000 simulations",ylab="density", xlab="means")
abline(v = sMean,col = "green",lwd = 2)
abline(v = tMean, col = "blue", lwd = 2)
hist(xbar,breaks=10,col="orange",
main="Histogram of means from 1000 simulations",ylab="density", xlab="means")
abline(v = sMean,col = "green",lwd = 3)
abline(v = tMean, col = "blue", lwd = 3)
hist(xbar,breaks=10,col="orange",
main="Distribution of means from 1000 simulations",ylab="density", xlab="means")
abline(v = sMean,col = "green",lwd = 3)
abline(v = tMean, col = "blue", lwd = 3, linetype = "dashed"
hist(xbar,breaks=10,col="orange",
main="Distribution of means from 1000 simulations",ylab="density", xlab="means")
abline(v = sMean,col = "green",lwd = 3, linetype = "dashed")
abline(v = tMean, col = "blue", lwd = 3, linetype = "dashed")
hist(xbar,breaks=10,col="orange",
main="Distribution of means from 1000 simulations",ylab="density", xlab="means")
abline(v = sMean,col = "green",lwd = 3)
abline(v = tMean, col = "blue", lwd = 3)
hist(xbar,breaks=10,col="orange",
main="Distribution of means from 1000 simulations",ylab="density", xlab="means")
abline(v = sMean,col = "green",lwd = 3)
abline(v = tMean, col = "blue", lwd = 3)
hist(xbar,breaks=12,col="orange",
main="Distribution of means from 1000 simulations",ylab="density", xlab="means")
abline(v = sMean,col = "green",lwd = 3)
abline(v = tMean, col = "blue", lwd = 3)
hist(xbar,breaks=20,col="orange",
main="Distribution of means from 1000 simulations",ylab="density", xlab="means")
abline(v = sMean,col = "green",lwd = 3)
abline(v = tMean, col = "blue", lwd = 3)
hist(xbar,breaks=10,col="orange",
main="Distribution of means from 1000 simulations",ylab="density", xlab="means")
abline(v = sMean,col = "green",lwd = 3)
abline(v = tMean, col = "blue", lwd = 3)
library(ggplot2)
ggplot(xbar,aes(x=sMean)) +  geom_histogram(binwidth = lambda, color="black",aes(y = ..density..)) +  labs(y="Density")  +  stat_function(fun=dnorm,args=list(mean=tMean, sd=tStd),color = "red", size = 2.0)
ggplot(xbar,aes(x=sMean)) +  geom_histogram(binwidth = 10, color="black",aes(y = ..density..)) +  labs(y="Density")  +  stat_function(fun=dnorm,args=list(mean=tMean, sd=tStd),color = "red", size = 2.0)
hist(xbar,breaks=10,col="black",
main="Distribution of means from 1000 simulations",ylab="density", xlab="means")
abline(v = sMean,col = "green",lwd = 3)
abline(v = tMean, col = "blue", lwd = 3)
hist(xbar,breaks=10,col="#FF9999",
main="Distribution of means from 1000 simulations",ylab="density", xlab="means")
abline(v = sMean,col = "green",lwd = 3)
abline(v = tMean, col = "blue", lwd = 3)
hist(xbar,breaks=10,col="#FF9999",
main="Distribution of means from 1000 simulations",ylab="density", xlab="means")
abline(v = sMean,col = "red",lwd = 3)
abline(v = tMean, col = "blue", lwd = 3)
g <- ggplot(xbar, aes(x=xbar))
hist(xbar,breaks=10,col="#FF9999",
main="Distribution of means from 1000 simulations",ylab="density", xlab="means")
abline(v = sMean,col = "red",lwd = 3)
abline(v = tMean, col = "blue", lwd = 3)
curve(dnorm(xbar, mean=tMean, sd=tStd),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
hist(xbar,breaks=10,col="#FF9999",
main="Distribution of means from 1000 simulations",ylab="density", xlab="means")
abline(v = sMean,col = "red",lwd = 3)
abline(v = tMean, col = "blue", lwd = 3)
curve(dnorm(xbar, mean=tMean, sd=tStd),
col="darkblue")
curve(dnorm, xbar, mean=tMean, sd=tStd),
col="darkblue")
curve(dnorm, xbar, mean=tMean, sd=tStd,
col="darkblue")
hist(xbar,breaks=10,col="#FF9999",
main="Distribution of means from 1000 simulations",ylab="density", xlab="means")
abline(v = sMean,col = "red",lwd = 3)
abline(v = tMean, col = "blue", lwd = 3)
curve(dnorm, xbar, mean=tMean, sd=tStd,
col="darkblue")
hist(xbar,breaks=10,col="#FF9999",
main="Distribution of means from 1000 simulations",ylab="density", xlab="means")
abline(v = sMean,col = "red",lwd = 3)
abline(v = tMean, col = "blue", lwd = 3)
curve(dnorm(x, mean=tMean, sd=tStd),
col="darkblue", lwd=2, add=TRUE)
curve(dnorm(x, mean=tMean, sd=tStd),
col="darkblue", lwd=2, add=TRUE, yaxt = "n")
```{r}
hist(xbar,breaks=10,col="#FF9999",
main="Distribution of means from 1000 simulations",ylab="density", xlab="means")
curve(dnorm(x, mean=tMean, sd=tStd),
col="darkblue", lwd=2, add=TRUE, yaxt = "n")
```{r}
hist(xbar,breaks=10,col="#FF9999",
main="Distribution of means from 1000 simulations",ylab="density", xlab="means")
curve(dnorm(x, mean=sMean, sd=sStd),
col="darkblue", lwd=2, add=TRUE, yaxt = "n")
hist(xbar,breaks=10,col="#FF9999",prob = TRUE
main="Distribution of means from 1000 simulations",ylab="density", xlab="means")
curve(dnorm(x, mean=sMean, sd=sStd),
col="darkblue", lwd=2, add=TRUE, yaxt = "n")
hist(xbar,breaks=10,col="#FF9999",prob = TRUE
main="Distribution of means from 1000 simulations",ylab="density", xlab="means")
curve(dnorm(xbar, mean=sMean, sd=sStd),
col="darkblue", lwd=2, add=TRUE, yaxt = "n")
plot(density(xbar))
plot(density(xbar), col = "orange", lwd = 10, main = "Distribution of sample means")
plot(density(xbar), col = "orange", lwd = 6, main = "Distribution of sample means")
plot(density(xbar), col = "orange", lwd = 6, main = "Distribution of sample means")
x = seq(min(xbar),max(xbar),length=300)
y = dnorm(x,mean=sMean,sd = sStd)
plot(density(xbar), col = "orange", lwd = 6, main = "Distribution of sample means")
x = seq(min(xbar),max(xbar),length=300)
y = dnorm(x,mean=sMean,sd = sStd)
lines(x,y,col=2)
plot(density(xbar), col = "orange", lwd = 6, main = "Density of sample means vs normal distribution")
x = seq(min(xbar),max(xbar),length=400)
y = dnorm(x,mean=sMean,sd = sStd)
lines(x,y,col=6)
```{r}
plot(density(xbar), col = "orange", lwd = 6, main = "Density of sample means vs normal distribution")
x = seq(min(xbar),max(xbar),length=400)
y = dnorm(x,mean=sMean,sd = sStd)
lines(x,y,col="purple", lwd = 6)
plot(density(xbar), col = "orange", lwd = 5, main = "Density of sample means vs normal distribution")
x = seq(min(xbar),max(xbar),length=400)
y = dnorm(x,mean=sMean,sd = sStd)
lines(x,y,col="purple", lwd = 5)
plot(density(xbar), col = "orange", lwd = 5, main = "Density of sample means vs normal distribution")
x = seq(min(xbar),max(xbar),length=500)
y = dnorm(x,mean=sMean,sd = sStd)
lines(x,y,col="purple", lwd = 5)
plot(density(xbar), col = "orange", lwd = 5, main = "Density of sample means vs normal distribution")
x = seq(min(xbar),max(xbar),length=0)
y = dnorm(x,mean=sMean,sd = sStd)
lines(x,y,col="purple", lwd = 5)
plot(density(xbar), col = "orange", lwd = 5, main = "Density of sample means vs normal distribution")
x = seq(min(xbar),max(xbar),length=600)
y = dnorm(x,mean=sMean,sd = sStd)
lines(x,y,col="purple", lwd = 5)
plot(density(xbar), col = "orange", lwd = 5, main = "Density of sample means vs normal distribution")
x = seq(min(xbar),max(xbar),length=1000)
y = dnorm(x,mean=sMean,sd = sStd)
lines(x,y,col="green", lwd = 5)
plot(density(xbar), col = "red", lwd = 5, main = "Density of sample means vs normal distribution")
x = seq(min(xbar),max(xbar),length=1000)
y = dnorm(x,mean=sMean,sd = sStd)
lines(x,y,col="blue", lwd = 5)
hist(xbar,breaks=10,col="#FF9999",
main="Distribution of means from 1000 simulations",ylab="density", xlab="means")
abline(v = sMean,col = "red",lwd = 3)
abline(v = tMean, col = "blue", lwd = 3)
hist(xbar,breaks=10,col="#FF9999",
main="Distribution of means from 1000 simulations",ylab="density", xlab="means")
abline(v = sMean,col = "purple",lwd = 3)
abline(v = tMean, col = "light blue", lwd = 3)
plot(density(xbar), col = "purple", lwd = 5, main = "Density of sample means vs normal distribution")
x = seq(min(xbar),max(xbar),length=1000)
y = dnorm(x,mean=sMean,sd = sStd)
lines(x,y,col="light blue", lwd = 5)
plot(density(xbar), col = "purple", lwd = 5, main = "Density of sample means vs normal distribution")
x = seq(min(xbar),max(xbar),length=1000)
y = dnorm(x,mean=sMean,sd = sStd)
lines(x,y,col="green", lwd = 5)
plot(density(xbar), col = "purple", lwd = 5, main = "Density of sample means vs normal distribution")
x = seq(min(xbar),max(xbar),length=1000)
y = dnorm(x,mean=sMean,sd = sStd)
lines(x,y,col="light green", lwd = 5)
plot(density(xbar), col = "purple", lwd = 5, main = "Density of sample means vs normal distribution")
x = seq(min(xbar),max(xbar),length=1000)
y = dnorm(x,mean=sMean,sd = sStd)
lines(x,y,col="dark green", lwd = 5)
plot(density(xbar), col = "purple", lwd = 5, main = "Density of sample means vs normal distribution")
x = seq(min(xbar),max(xbar),length=1000)
y = dnorm(x,mean=sMean,sd = sStd)
lines(x,y,col="pink", lwd = 5)
plot(density(xbar), col = "purple", lwd = 5, main = "Density of sample means vs normal distribution")
x = seq(min(xbar),max(xbar),length=1000)
y = dnorm(x,mean=sMean,sd = sStd)
lines(x,y,col="majenta", lwd = 5)
colors
colors()
plot(density(xbar), col = "purple", lwd = 5, main = "Density of sample means vs normal distribution")
x = seq(min(xbar),max(xbar),length=1000)
y = dnorm(x,mean=sMean,sd = sStd)
lines(x,y,col="plum", lwd = 5)
plot(density(xbar), col = "purple", lwd = 5, main = "Density of sample means vs normal distribution")
x = seq(min(xbar),max(xbar),length=1000)
y = dnorm(x,mean=sMean,sd = sStd)
lines(x,y,col="tan", lwd = 5)
plot(density(xbar), col = "purple", lwd = 5, main = "Density of sample means vs normal distribution")
x = seq(min(xbar),max(xbar),length=1000)
y = dnorm(x,mean=sMean,sd = sStd)
lines(x,y,col="turquoise", lwd = 5)
plot(density(xbar), col = "purple", lwd = 5, main = "Density of sample means vs normal distribution")
x = seq(min(xbar),max(xbar),length=1000)
y = dnorm(x,mean=sMean,sd = sStd)
lines(x,y,col="orange", lwd = 5)
hist(xbar,breaks=10,col="#FF9999",
main="Distribution of means from 1000 simulations",ylab="density", xlab="means")
abline(v = sMean,col = "purple",lwd = 3)
abline(v = tMean, col = "orange", lwd = 3)
hist(xbar,breaks=10,col="turquoise",
main="Distribution of means from 1000 simulations",ylab="density", xlab="means")
abline(v = sMean,col = "purple",lwd = 3)
abline(v = tMean, col = "orange", lwd = 3)
hist(xbar,breaks=10,col="turquoise",
main="Distribution of means from 1000 simulations",ylab="density", xlab="means")
abline(v = sMean,col = "purple",lwd = 4)
abline(v = tMean, col = "orange", lwd = 3)
plot(density(xbar), col = "purple", lwd = 5, main = "Density of sample means vs normal distribution")
x = seq(min(xbar),max(xbar),length=1000)
y = dnorm(x,mean=sMean,sd = sStd)
lines(x,y,col="orange", lwd = 5)
library(knitr)
knit2pdf(ExpoDist_Project.Rmd)
hist(xbar,breaks=10,col="turquoise",
main="Distribution of means from 1000 simulations",ylab="density", xlab="means")
abline(v = sMean,col = "orange",lwd = 3)
abline(v = tMean, col = "purple", lwd = 3)
abline(v = sMean,col = "orange",lwd = 3)
abline(v = tMean, col = "purple", lwd = 4)
hist(xbar,breaks=10,col="turquoise",
main="Distribution of means from 1000 simulations",ylab="density", xlab="means")
abline(v = sMean,col = "purple",lwd = 4)
abline(v = tMean, col = "orange", lwd = 3)
hist(xbar,breaks=10,col="seagreen",
main="Distribution of means from 1000 simulations",ylab="density", xlab="means")
abline(v = sMean,col = "purple",lwd = 4)
abline(v = tMean, col = "orange", lwd = 3)
hist(xbar,breaks=10,col="midnightblue",
main="Distribution of means from 1000 simulations",ylab="density", xlab="means")
abline(v = sMean,col = "purple",lwd = 4)
abline(v = tMean, col = "orange", lwd = 3)
hist(xbar,breaks=10,col="skyblue",
main="Distribution of means from 1000 simulations",ylab="density", xlab="means")
abline(v = sMean,col = "purple",lwd = 4)
abline(v = tMean, col = "orange", lwd = 3)
hist(xbar,breaks=10,col="lightpink",
main="Distribution of means from 1000 simulations",ylab="density", xlab="means")
abline(v = sMean,col = "purple",lwd = 4)
abline(v = tMean, col = "orange", lwd = 3)
hist(xbar,breaks=10,col="skyblue",
main="Distribution of means from 1000 simulations",ylab="density", xlab="means")
abline(v = sMean,col = "purple",lwd = 4)
abline(v = tMean, col = "orange", lwd = 3)
hist(xbar,breaks=10,col="skyblue",
main="Distribution of means from 1000 simulations",ylab="density", xlab="means")
abline(v = sMean,col = "purple",lwd = 5)
abline(v = tMean, col = "orange", lwd = 3)
knit2html("StatInference_Project1.Rmd")
setwd
setwd()
getwd()
setwd("/Users/Jaya/StsInference_Project")
setwd("/Users/Jaya/Git/StsInference_Project")
setwd("/Users/Jaya/Git/StsInference_Project/")
setwd("/Users/Jaya/Git/StatInference_Project/")
library(knitr)
knit2html("StatInference_Project1.Rmd")
knit2html("StatInference_Project1.Rmd")
knit2html("StatInference_Project1.Rmd")
plot(density(xbar), col = "purple", lwd = 4, main = "Density of sample means vs normal distribution")
x = seq(min(xbar),max(xbar),length=1200)
y = dnorm(x,mean=sMean,sd = sStd)
lines(x,y,col="orange", lwd = 4)
library(ToothGrowth)
install.packages("ToothGrowth")
load(ToothGrowth)
library(datasets)
data(ToothGrowth)
rm(ls = ls())
rm(list=ls())
library(datasets)
data(ToothGrowth)
summary(ToothGrowth)
head(ToothGrowth)
g <- ggplot(ToothGrowth, aes( x = dose, y = len))
g <- g + geom_boxplot(notch = T) + facet_grid(.~supp) +
labs(x="Vitamin C dosage in mg", y="Length of Tooth Growth", title="Length of Tooth Growth per Dosage")
g <- ggplot(ToothGrowth, aes( x = dose, y = len))
g <- g + geom_boxplot(notch = T) + facet_grid(.~supp) +
labs(x="Vitamin C dosage in mg", y="Length of Tooth Growth", title="Length of Tooth Growth per Dosage")
print(g)
g <- ggplot(ToothGrowth, aes( x = dose, y = len, fill = dose))
g <- g + geom_boxplot(notch = T) + facet_grid(.~supp) +
labs(x="Vitamin C dosage in mg", y="Length of Tooth Growth", title="Length of Tooth Growth per Dosage")
print(g)
g <- ggplot(ToothGrowth, aes( x = factor(dose), y = len, fill = factor(dose))
g <- g + geom_boxplot(notch = T) + facet_grid(.~supp) +
labs(x="Vitamin C dosage in mg", y="Length of Tooth Growth", title="Length of Tooth Growth per Dosage")
print(g)
g <- ggplot(ToothGrowth, aes( x = factor(dose), y = len, fill = factor(dose)))
g <- g + geom_boxplot(notch = T) + facet_grid(.~supp) +
labs(x="Vitamin C dosage in mg", y="Length of Tooth Growth", title="Length of Tooth Growth per Dosage")
print(g)
g <- ggplot(ToothGrowth, aes( x = factor(dose), y = len, fill = factor(dose)))
g <- g + geom_boxplot() + facet_grid(.~supp) +
labs(x="Vitamin C dosage in mg", y="Length of Tooth Growth", title="Length of Tooth Growth per Dosage")
print(g)
View(ToothGrowth)
View(ToothGrowth)
g <- ggplot(ToothGrowth, aes( x = factor(dose), y = len, fill = len)
g <- g + geom_boxplot() + facet_grid(.~supp) +
labs(x="Vitamin C dosage in mg", y="Length of Tooth Growth", title="Length of Tooth Growth per Dosage")
print(g)
g <- ggplot(ToothGrowth, aes( x = factor(dose), y = len, fill = len)
g <- g + geom_boxplot(notch = T) + facet_grid(.~supp) +
labs(x="Vitamin C dosage in mg", y="Length of Tooth Growth", title="Length of Tooth Growth per Dosage")
print(g)
g <- ggplot(ToothGrowth, aes( x = factor(dose), y = len, fill = len))
g <- g + geom_boxplot(notch = T) + facet_grid(.~supp) +
labs(x="Vitamin C dosage in mg", y="Length of Tooth Growth", title="Length of Tooth Growth per Dosage")
print(g)
g <- ggplot(ToothGrowth, aes( x = factor(dose), y = len, fill = factor(dose)))
g <- g + geom_boxplot(notch = T) + facet_grid(.~supp) +
labs(x="Vitamin C dosage in mg", y="Length of Tooth Growth", title="Length of Tooth Growth per Dosage")
print(g)
g <- ggplot(ToothGrowth, aes( x = factor(dose), y = len, fill = factor(dose)))
g <- g + geom_boxplot() + facet_grid(.~supp) +
labs(x="Vitamin C dosage in mg", y="Length of Tooth Growth", title="Length of Tooth Growth per Dosage")
print(g)
g <- ggplot(ToothGrowth, aes( x = factor(dose), y = len))
g <- g + geom_boxplot() + facet_grid(.~supp) +
labs(x="Vitamin C dosage in mg", y="Length of Tooth Growth", title="Length of Tooth Growth per Dosage")
print(g)
g <- ggplot(ToothGrowth, aes( x = factor(dose), y = len, fill = factor(dose)))
g <- g + geom_boxplot() + facet_grid(.~supp) +
labs(x="Vitamin C dosage in mg", y="Length of Tooth Growth", title="Length of Tooth Growth per Dosage")
print(g)
t.test(len ~ supp, data = ToothGrowth)
t.test(len ~ supp, data = ToothGrowth)
pair1<-subset(ToothGrowth, dose==0.5)
pair2<-subset(ToothGrowth, dose==1.0)
pair3<-subset(ToothGrowth, dose==2.0)
View(pair1)
View(pair2)
View(pair3)
t.test(len ~ supp, data = pair1)
t.test(len ~ supp, data = pair2)
t.test(len ~ supp, data = pair3)
g <- ggplot(ToothGrowth, aes( x = factor(dose), y = len, fill = factor(dose)))
g <- g + geom_boxplot() + facet_grid(.~supp) +
labs(x="Vitamin C dosage in mg", y="Length of Tooth Growth", title="Length of Tooth Growth per Dosage")
print(g)
pair1<-subset(ToothGrowth, dose %in% c(0.5, 1.0))
pair2<-subset(ToothGrowth, dose %in% c(1.0, 2.0))
pair3<-subset(ToothGrowth, dose %in% c(2.0, 0.5))
t.test(len ~ dose, data = pair1)
t.test(len ~ dose, data = pair2)
t.test(len ~ supp, data = pair3)
variables.n
knit2html("StatInference_Project2.Rmd")
